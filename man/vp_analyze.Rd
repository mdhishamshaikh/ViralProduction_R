% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vp_analyze.R
\name{vp_analyze}
\alias{vp_analyze}
\alias{vp_analyze.default}
\alias{vp_analyze.viralprod}
\title{Analyze viral production data}
\usage{
vp_analyze(x, ...)

\method{vp_analyze}{default}(x, ...)

\method{vp_analyze}{viralprod}(
  x,
  ...,
  vp_results = data.frame(),
  original_abundances = data.frame(),
  burst_sizes = c(),
  bacterial_secondary_production = NULL,
  nutrient_content_bacteria = list(),
  nutrient_content_viruses = list(),
  write_output = TRUE,
  output_dir = ""
)
}
\arguments{
\item{x}{Data frame with the output of the flow cytometry, has to have the \code{viralprod} class.}

\item{...}{Arguments passed on to the next function.}

\item{vp_results}{Data frame with the viral production calculation results, available in global environment. See \link{vp_calculate} for more details.}

\item{original_abundances}{Data frame with the abundances of bacterial and virus population in the original sample, has to have the \code{viralprod_analyze} class.}

\item{burst_sizes}{Vector with three different burst sizes. The burst size refers to the number of new viral particles released from an infected bacterial cell.}

\item{bacterial_secondary_production}{Value for the bacterial secondary production, how much new bacterial biomass is produced as a result of bacterial growth and reproduction.}

\item{nutrient_content_bacteria}{List with the amount of organic carbon, nitrogen and phosphor released by an aquatic bacteria.}

\item{nutrient_content_viruses}{List with the amount of organic carbon, nitrogen and phosphor released by a marine virus (bacteriophage).}

\item{write_output}{If \code{TRUE}, the output data frames will be saved as csv files in the same folder of the viral production calculation.
If no csv files are wanted, set to \code{FALSE}. (Default = \code{TRUE})}

\item{output_dir}{String that refers to the location of folder to save the data frames as csv files.}
}
\value{
Data frame with the analyzed viral production results, different parameters for estimating virus-induced mortality are calculated. A second data frame with some more information about the variables will also be available in the global environment.
}
\description{
Luef et al. (2009) created an online tool, \verb{Viral Production Calculator}, that assesses and analyses viral production.
Next to calculating the viral production and the proportion of lysogenic bacteria in the sample, other parameters for estimating
virus-induced mortality are determined including the lysis rate of bacteria, viral turnover time, organic carbon release and many more.

Based on the original data and the output of \link{vp_calculate}, the same parameters are
calculated and added to the already existing data frame. Another data frame with the description and units of each of the variables
is also generated.

Reference to paper:

Luef, B., Luef, F., and Peduzzi, P. (2009). Online program ‘VIPCAL’ for calculating lytic viral production
and lysogenic cells based on a viral reduction approach. Environmental microbiology reports, 1(1):78–85.
doi:10.1111/j.1758-2229.2008.00008.x.
}
\examples{
\dontrun{
# Setup
data_NJ2020_all <- read.csv(system.file('extdata', 
'NJ2020_Station_2_and_6_all_populations.csv', package = "viralprod"))

original_abundances_NJ2020 <- read.csv(system.file('extdata',
'NJ2020_original_abundances.csv', package = "viralprod"))

x <- vp_class_count_data(data_NJ2020_all)
y <- vp_class_ori_abu(original_abundances_NJ2020)

vp_calculate(x, write_output = F)

# Perform
# Default method
vp_analyze(x = data_NJ2020_all, vp_results = vp_results_output_df, 
original_abundances = original_abundances_NJ2020, write_output = F)

# S3 class, viralprod, method
# Error expected when original abundances don't have correct class
vp_analyze(x, vp_results = vp_results_output_df, 
original_abundances = original_abundances_NJ2020, write_output = F)

# Write output files
vp_analyze(x, vp_results = vp_results_output_df, 
original_abundances = y, 
output_dir = paste0(system.file(“extdata”, package = “viralprod”), 
“/NJ2020_vp_results”))

# No output files
vp_analyze(x, vp_results = vp_results_output_df, 
original_abundances = y, write_output = F)

# Set own parameter values
vp_analyze(x, vp_results = vp_results_output_df, 
original_abundances = y,
burst_sizes = c(15,30,50), bacterial_secondary_producition = 1000, 
nutrient_content_bacteria = list(C = 20, N = 15, P = 5),
nutrient_content_virus = list(C = 5, N = 3, P = 1)) 
}
}
