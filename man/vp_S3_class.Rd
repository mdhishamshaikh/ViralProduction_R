% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vp_S3_class.R
\name{vp_S3_class}
\alias{vp_S3_class}
\alias{vp_class_count_data}
\alias{vp_class_ori_abu}
\title{Create S3 class for input data frames}
\usage{
vp_class_count_data(data = data.frame())

vp_class_ori_abu(original_abundances = data.frame())
}
\arguments{
\item{data}{Data frame with the output of the flow cytometry.}

\item{original_abundances}{Data frame with the abundances of bacterial and virus population in the original sample.}
}
\value{
If data frame meets the requirements, a new class is added. Otherwise, an error will be thrown.
}
\description{
The \code{viralprod} package is dependent on two data frames, the output data frame of the flow cytometry step and a data
frame with the original abundances in the sample. To make the R package more organized, maintainable and user-friendly,
\verb{S3 object-oriented programming} is introduced. Based on the requirements of the data frames, a separate S3 class is defined.
The functions to calculate, analyze and visualize the viral production from the viral reduction assay will only work on these specific
S3 classes, otherwise an error will be thrown.

\code{vp_class_count_data} checks the output data frame of the flow cytometry step. If the requirements are met, \code{viralprod} class is added.

\code{vp_class_ori_abu} checks the original abundances data frame. If the requirements are met, \code{viralprod_analyze} class is added.
}
\examples{
\dontrun{
# Setup
data_NJ2020_all <- read.csv(system.file('extdata', 
'NJ2020_Station_2_and_6_all_populations.csv', package = "viralprod"))

original_abundances_NJ2020 <- read.csv(system.file('extdata',
'NJ2020_original_abundances.csv', package = "viralprod"))

# Perform
data_S3_class <- vp_class_count_data(data_NJ2020_all)

original_abundances_S3_class <- vp_class_ori_abu(original_abunances_NJ2020)
}
}
